schemas:
  CreateDomainRequest:
    type: object
    properties:
      value:
        type: string
    required:
      - value
  Domain:
    type: object
    properties:
      uid:
        type: string
        format: uuid
      value:
        type: string
    required:
      - uid
      - value

getAllDomains:
  summary: Get all domains
  security:
    - bearerAuth: []
  responses:
    '200':
      description: A list of domains
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/schemas/Domain'
            required:
              - data
    '400':
      $ref: '../shared/responses.yaml#/BadRequestError'
    '401':
      $ref: '../shared/responses.yaml#/UnauthorizedError'
    '404':
      $ref: '../shared/responses.yaml#/NotFoundError'

createDomain:
  summary: Create a new domain
  security:
    - bearerAuth: []
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '#/schemas/CreateDomainRequest'
  responses:
    '201':
      description: Domain created successfully
      content:
        application/json:
          schema:
            $ref: '#/schemas/Domain'
    '400':
      $ref: '../shared/responses.yaml#/BadRequestError'
    '401':
      $ref: '../shared/responses.yaml#/UnauthorizedError'
    '404':
      $ref: '../shared/responses.yaml#/NotFoundError'

deleteDomain:
  summary: Delete a domain
  security:
    - bearerAuth: []
  parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
        format: uuid
  responses:
    '204':
      description: Domain deleted successfully
    '400':
      $ref: '../shared/responses.yaml#/BadRequestError'
    '401':
      $ref: '../shared/responses.yaml#/UnauthorizedError'
    '404':
      $ref: '../shared/responses.yaml#/NotFoundError'
